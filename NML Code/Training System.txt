

Solo Missions

Stat Training Mini Game

Progress|Quality|Endurance   Inspiration (Low Random, Increases next Gain in any action)   Rest ( Lowers Progress and Quality, Raises Endurance slightly)  

Progress: A measure of how compltely the lesson or training is understood. Once progress is maxed out, Quality recieves a 2 times bonus. Raising progress will be influenced by Stat Tier measured against the current level of what is being trained.

Quality: This is a measure of how much of a reward will be earned by the end of the training session. Quality raises with a low level of randomness that is not influenced by anything but a full progress bar.

Endurance: The amount of effort that is able to be applied to the training. Raising Progress or Quality lowers Endurance. Rest is the only way you can replinish this.



Jutsu Training Mini Game

RP Skill Training

Room Centric Skill Checks (based on people they are applying it to)

Type(Stat Jutsu or Skill)|Ability(Corresponding Traits)|Proficiency(Prior training with the trait)|Progress(How well the training is understood)|Quality(How much is gotten out of training)|Endurance(How long the training can go on)|Inspiration(A sudden burst of Progress, Quality, or Endurance)


&Cmd`Training #2082=$+Train *=*:@assert match(Stat|Jutsu|Skill,%0,|)={@pemit %#=[prompt(Training)] %0 is not something that you can train. Try Stat, Jutsu, or Skill instead.};@assert gt(get(%#/Dat`Stamina`Current),5000)={@pemit %#=[prompt(Training)] You do not have enough stamina to begin training.};@assert and(!hasattr(%#/Dat`TrainingStat),!hasattr(%#/Dat`TrainingJutsu),!hasattr(%#/Dat`TrainingSkill))={@pemit %#=[prompt(Training)] You must complete your current [extract(get(%#/Dat`Training[if(hasattr(%#/Dat`TrainingStat),Stat,[if(hasattr(%#/Dat`TrainingJutsu),Jutsu,[if(hasattr(%#/Dat`TrainingSkill),Skill)])])]),1,1,|)] training first.};@assert or([and(match(Stat,%0),match(Taijutsu|Ninjutsu|Genjutsu|Power|Speed|Stamina|Intelligence|Hand Seals,%1*,|))],[and(match(Jutsu,%0),hasattr(%#/Dat`JutsuAttributes`[edit(%1,%b,-)]))],[and(match(Skill,%0),match([iter(u(#244/dat`rpskills), if(elements(u(%#/dat`rpskills), #@,|), ##|),|,)],%1,|))])={@pemit %#=[prompt(Training)] The type of training you are performing and the specific task you are attempting to train are incompatible.};@set %#=Dat`Training%0:[grab(Stat|Jutsu|Skill,%0,|)]|[caplist(%1)]|[u(#2082/func`Shinobirankcalc)]|0|0|[u(#2082/Func`EndCalc)]|0;@set %#=Dat`Stamina`Current:[max(sub(get(%#/Dat`Stamina`Current),5000),0)];@pemit %#=[prompt(Training)] You have begun to train a [caplist(%0)] with the [caplist(%1)] ability for 5000 Stamina.; @oemit %#= %N has begun to train [obj(%#)] [caplist(%1)] ability.

[iter(u(#244/dat`rpskills), if(elements(u(%#/dat`rpskills), #@,|), ##|),|,)]



&CMD`TRAININGQUALITY #2082=$+Train/* Quality:@assert hasattr(%#/Dat`Training%0)={@pemit %#=[prompt(Training)] You must begin a training session first.}; @eval [setq(0,ceil(rand(mul([extract(get(%#/Dat`Training%0),3,1,|)],.25),mul([extract(get(%#/Dat`Training%0),3,1,|)],1.25))))][setq(1,max(rand([div(%q0,5)],[div(%q0,2)]),5))][setq(2,[ceil(mul([extract(get(%#/Dat`Training%0),5,1,|)],add(1,fdiv(u(#2082/func`shinobirankcalc),50))))])][setq(3, [extract(get(%#/Dat`Training%0),4,1,|)])]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),4,[add(extract(get(%#/Dat`Training%0),4,1,|),%q0,[if(eq(extract(get(%#/Dat`Training%0),7,1,|),1),[rand(10,[add(11,%q0)])],0)])],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),6,[max(sub(extract(get(%#/Dat`Training%0),6,1,|),%q1),0)],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),7,[if(gte(add(rand(100),u(#2082/func`shinobirankcalc)),100),1,0)],|)]; @pemit %#=[Prompt(Training)] Your Quality has been raised to [extract(get(%#/Dat`Training%0),4,1,|)] ([ansi(hg, +[sub([extract(get(%#/Dat`Training%0),4,1,|)], %q3)])]) and [u(fn`endureDisplay, [extract(get(%#/Dat`Training%0),6,1,|)])] ([ansi(hr, -%q1)]) Endurance remains. [if(eq(extract(get(%#/Dat`Training%0),7,1,|),1), Your effort pays off with a burst of Inspiration!)]; @eval [if(lte(extract(get(%#/Dat`Training%0),6,1,|),0),[oemit(%#,{%r[prompt(Training)] Having pushed [obj(%#)]self to the limit%, %N finishes their training regiment.})] [pemit(%#,%r[prompt(Training)] You have earned a total of [min(%q2,4000)] Experience from your training session!)])];@if lte(extract(get(%#/Dat`Training%0),6,1,|),0)={@set %#=Dat`XP:[add(get(%#/Dat`XP),[min(%q2,4000)])]; @cemit Monitor-XP=[prompt(Training)] %N has received [min(%q2,4000)] XP from training.; @set %#=Dat`Training%0: }

&CMD`TRAININGPROGRESS #2082=$+Train/* Progress:@assert hasattr(%#/Dat`Training%0)={@pemit %#=[prompt(Training)] You must begin a training session first.}; @eval [setq(0,ceil(rand(mul([extract(get(%#/Dat`Training%0),3,1,|)],.25),mul([extract(get(%#/Dat`Training%0),3,1,|)],1.25))))][setq(1,max(rand([div(%q0,5)],[div(%q0,2)]),5))][setq(3, extract(get(%#/Dat`Training%0),5,1,|))]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),5,[if(gte(extract(get(%#/Dat`Training%0),4,1,|),100),[ceil(add(extract(get(%#/Dat`Training%0),5,1,|),mul(add(%q0,[if(eq(extract(get(%#/Dat`Training%0),7,1,|),1),[rand(1,%q0)],0)]),2)))],[add(extract(get(%#/Dat`Training%0),5,1,|),%q0,[if(eq(extract(get(%#/Dat`Training%0),7,1,|),1),[rand(1,%q0)],0)])])],|)]; @eval [setq(2,[ceil(mul([extract(get(%#/Dat`Training%0),5,1,|)],add(1,fdiv(u(#2082/func`shinobirankcalc),50))))])]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),6,[max(sub(extract(get(%#/Dat`Training%0),6,1,|),%q1),0)],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),7,[if(gte(add(rand(100),u(#2082/func`shinobirankcalc)),100),1,0)],|)]; @pemit %#=[Prompt(Training)] Your Progress has been raised to [extract(get(%#/Dat`Training%0),5,1,|)] ([ansi(hg, +[sub([extract(get(%#/dat`Training%0), 5, 1, |)], %q3)])]) and [u(fn`endureDisplay, [extract(get(%#/Dat`Training%0),6,1,|)])] ([ansi(hr, -%q1)]) Endurance remains. [if(eq(extract(get(%#/Dat`Training%0),7,1,|),1), Your effort pays off with a burst of Inspiration!)]; @eval [if(lte(extract(get(%#/Dat`Training%0),6,1,|),0),[oemit(%#,{%r[prompt(Training)] Having pushed [obj(%#)]self to the limit%, %N finishes their training regiment.})] [pemit(%#,%r[prompt(Training)] You have earned a total of [min(%q2,4000)] Experience from your training session!)],)];@if lte(extract(get(%#/Dat`Training%0),6,1,|),0)={@set %#=Dat`XP:[add(get(%#/Dat`XP),[min(%q2,4000)])]; @cemit Monitor-XP=[prompt(Training)] %N has received [min(%q2,4000)] XP from training.; @set %#=Dat`Training%0: }

tier
&CMD`TRAININGREST #2082=$+Train/* Rest:@assert hasattr(%#/Dat`Training%0)={@pemit %#=[prompt(Training)] You must begin a training session first.};@break gte([extract(get(%#/Dat`Training%0),6,1,|)],[u(#2082/Func`EndCalc)])={@pemit %#=[prompt(Training)] You already have full Endurance.};@break and(lte([extract(get(%#/Dat`Training%0),4,1,|)],0),lte([extract(get(%#/Dat`Training%0),5,1,|)],0))={@pemit %#=[prompt(Training)] You have lost all of the Quality and Progress of your current training and thus find it difficult to rest.};@eval [setq(0,rand(10,25))][setq(1,rand(5,[add(20,[u(#2082/Func`RestCalc)])]))] ;@set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),6,[min(add(extract(get(%#/Dat`Training%0),6,1,|),%q1,[if(eq(extract(get(%#/Dat`Training%0),7,1,|),1),15,0)]),[u(#2082/Func`EndCalc)])],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),4,[max(sub(extract(get(%#/Dat`Training%0),4,1,|),%q0),0)],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),5,[max(sub(extract(get(%#/Dat`Training%0),5,1,|),%q0),0)],|)];  @pemit %#=[prompt(Training)] You recover to [u(fn`enduredisplay, [extract([get(%#/dat`training%0)], 6, 1, |)])] ([ansi(hg, +[add(%q1,[if(extract(get(%#/Dat`Training%0),7,1,|),15)])])]) Endurance from resting. You lose [ansi(hr, -%q0)] Progress ([extract([get(%#/dat`training%0)], 5, 1, |)]) and Quality ([ansi([if([gte([extract([get(%#/dat`training%0)], 4, 1, |)], 100)], hg, hr)], [extract([get(%#/dat`training%0)], 4, 1, |)])]) of training.; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),7,0,|)]

Type|Ability|Proficiency|Quality|Progress|Endurance|Inspiration

&Func`EndCalc #2082=[add([if(match(get(%#/Dat`Merits),Vigorous,|),15)],[if(match(get(%#/Dat`Merits),High Chakra,|),15)],[if(match(get(%#/Dat`Flaws),Enervated,|),-15)],[if(match(get(%#/Dat`Flaws),Low Chakra,|),-15)],100)]

&Func`RestCalc #2082=[add([if(match(get(%#/Dat`Merits),Quick Recovery,|),5)],[if(match(get(%#/Dat`Merits),Rapid Recovery,|),5)],[if(match(get(%#/Dat`Merits),Perfected Chakra Molding,|),5)],[if(match(get(%#/Dat`Flaws),Slow Recovery,|),-5)],[if(match(get(%#/Dat`Flaws),Erratic Chakra,|),-5)])]

shinobirankcalc

&CMD`TRAININGVIEW #2082=$+Train/* view:@pemit %#=[printf($35^:[ansi(hb, -=)]:s, %[ Training Status %])]%r[printf($1:[ansi(hb, |)]:&s $-20&s $10&s $1:[ansi(hb, |)]:&s, %r%r%r%r%r, [ansi(hw, Type:%rAbility:%rProficiency:%rProgress:%rQuality:%rEndurance:)], [extract(get(%#/Dat`Training%0),1,1,|)]%r[extract(get(%#/Dat`Training%0),2,1,|)]%r[extract(get(%#/Dat`Training%0),3,1,|)]%r[extract(get(%#/Dat`Training%0),5,1,|)]%r[ansi([if([gte([extract(get(%#/Dat`Training%0),4,1,|)], 100)], hg, hr)], [extract(get(%#/Dat`Training%0),4,1,|)])]%r[u(#2082/fn`endureDisplay, [extract(get(%#/Dat`Training%0),6,1,|)])], %r%r%r%r%r)]%r[printf($35^:[ansi(hb, -=)]:s, %[ End %])]


&FUNC`REFRESH #245=[set(%#,Dat`Vitality`Total:[u(#245/func`vitalitycalc)])][set(%#,Dat`Vitality`Max:[u(#245/func`vitalitycalc)])][set(%#,Dat`PhysicalEnergy`Total:[u(#245/func`physicalenergycalc)])][set(%#,Dat`PhysicalEnergy`Max:[u(#245/func`physicalenergycalc)])][set(%#,Dat`PhysicalEnergy`Current:[u(#245/func`physicalenergycalc)])][set(%#,Dat`SpiritualEnergy`Total:[u(#245/func`Spiritualenergycalc)])] [set(%#,Dat`SpiritualEnergy`Max:[u(#245/func`Spiritualenergycalc)])][set(%#,Dat`SpiritualEnergy`Current:[u(#245/func`Spiritualenergycalc)])][set(%#,Dat`Stamina`Total:[u(#245/func`StaminaTotalcalc)])][set(%#,Dat`Stamina`Max:[u(#245/func`StaminaTotalcalc)])][set(%#,Dat`Chakra`Total:[u(#245/func`chakraTotalcalc)])][set(%#,Dat`Chakra`Max:[u(#245/func`chakraTotalcalc)])]