

Solo Missions

Stat Training Mini Game

Progress|Quality|Endurance   Inspiration (Low Random, Increases next Gain in any action)   Rest ( Lowers Progress and Quality, Raises Endurance slightly)  

Progress: A measure of how compltely the lesson or training is understood. Once progress is maxed out, Quality recieves a 2 times bonus. Raising progress will be influenced by Stat Tier measured against the current level of what is being trained.

Quality: This is a measure of how much of a reward will be earned by the end of the training session. Quality raises with a low level of randomness that is not influenced by anything but a full progress bar.

Endurance: The amount of effort that is able to be applied to the training. Raising Progress or Quality lowers Endurance. Rest is the only way you can replinish this.



Jutsu Training Mini Game

RP Skill Training

Room Centric Skill Checks (based on people they are applying it to)

Type(Stat Jutsu or Skill)|Ability(Corresponding Traits)|Proficiency(Prior training with the trait)|Progress(How well the training is understood)|Quality(How much is gotten out of training)|Endurance(How long the training can go on)|Inspiration(A sudden burst of Progress, Quality, or Endurance)


&Cmd`Training #2082=$+Train *=*:@assert match(Stat|Jutsu|Skill,%0,|)={@pemit %#=[prompt(Training)] %0 is not something that you can train. Try Stat, Jutsu, or Skill instead.};@assert gt(get(%#/Dat`Stamina`Current),5000)={@pemit %#=[prompt(Training)] You do not have enough stamina to begin training.};@assert gte(get(%#/dat`KP),1)={@pemit %#=%r[prompt(Training)] You do not have enough KP to begin training.};@assert and(!hasattr(%#/Dat`TrainingStat),!hasattr(%#/Dat`TrainingJutsu),!hasattr(%#/Dat`TrainingSkill))={@pemit %#=[prompt(Training)] You must complete your current [extract(get(%#/Dat`Training[if(hasattr(%#/Dat`TrainingStat),Stat,[if(hasattr(%#/Dat`TrainingJutsu),Jutsu,[if(hasattr(%#/Dat`TrainingSkill),Skill)])])]),1,1,|)] training first.};@assert or([and(match(Stat,%0),match(Taijutsu|Ninjutsu|Genjutsu|Power|Speed|Stamina|Intelligence|Hand Seals,%1*,|))],[and(match(Jutsu,%0),hasattr(%#/Dat`JutsuAttributes`[edit(%1,%b,-)]))],[and(match(Skill,%0),match([iter(u(#244/dat`rpskills), if(elements(u(%#/dat`rpskills), #@,|), ##|),|,)],%1,|))])={@pemit %#=[prompt(Training)] The type of training you are performing and the specific task you are attempting to train are incompatible.};@set %#=Dat`Training%0:[grab(Stat|Jutsu|Skill,%0,|)]|[caplist(%1)]|[u(#2082/func`Shinobirankcalc)]|0|0|[u(#2082/Func`EndCalc)]|0;@set %#=Dat`Stamina`Current:[max(sub(get(%#/Dat`Stamina`Current),5000),0)];@set %#=Dat`KP:[sub(get(%#/Dat`KP),1)];@pemit %#=[prompt(Training)] You have begun to train a [caplist(%0)] with the [caplist(%1)] ability for 5000 Stamina and 1 KP.; @oemit %#= %N has begun to train [obj(%#)] [caplist(%1)] ability.

[iter(u(#244/dat`rpskills), if(elements(u(%#/dat`rpskills), #@,|), ##|),|,)]

if(eq(15, words(get(%#/dat`jutsuattributes'%1),|)), insert(get(%#/dat`jutsuattributes`%1), 16, 0,|))
#600 
dat`training`stats and dat`training`rpskills



&CMD`TRAININGQUALITY #2082=$+Train/* Quality:@assert match([extract(get(%#/Dat`Training[switch(1,hasattr(%#/Dat`TrainingStat),Stat,hasattr(%#/Dat`TrainingJutsu),Jutsu,hasattr(%#/Dat`TrainingSkill),Skill)]),1,1,|)],%0,|)={@pemit %#=[prompt(Training)] %0 is not a valid option. Please do [ansi(hg,+train)]/[ansi(hr,<Category>)] Progress where [ansi(hr,<Category>)] is one of [ansi(y,Jutsu)], [ansi(y,Stat)], or [ansi(y,Skill)] };@assert hasattr(%#/Dat`Training%0)={@pemit %#=[prompt(Training)] You must begin a training session first.}; @eval [setq(0,ceil(rand(mul([extract(get(%#/Dat`Training%0),3,1,|)],.25),mul([extract(get(%#/Dat`Training%0),3,1,|)],1.25))))][setq(1,max(rand([div(%q0,5)],[div(%q0,2)]),5))][setq(2,[ceil(mul([extract(get(%#/Dat`Training%0),5,1,|)],add(1,fdiv(u(#2082/func`shinobirankcalc),50))))])][setq(3, [extract(get(%#/Dat`Training%0),4,1,|)])]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),4,[add(extract(get(%#/Dat`Training%0),4,1,|),%q0,[if(eq(extract(get(%#/Dat`Training%0),7,1,|),1),[rand(10,[add(11,%q0)])],0)])],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),6,[max(sub(extract(get(%#/Dat`Training%0),6,1,|),%q1),0)],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),7,[if(gte(add(rand(100),u(#2082/func`shinobirankcalc)),100),1,0)],|)]; @pemit %#=[Prompt(Training)] Your Quality has been raised to [extract(get(%#/Dat`Training%0),4,1,|)] ([ansi(hg, +[sub([extract(get(%#/Dat`Training%0),4,1,|)], %q3)])]) and [u(fn`endureDisplay, [extract(get(%#/Dat`Training%0),6,1,|)])] ([ansi(hr, -%q1)]) Endurance remains. [if(eq(extract(get(%#/Dat`Training%0),7,1,|),1), Your effort pays off with a burst of Inspiration!)]; @eval [if(lte(extract(get(%#/Dat`Training%0),6,1,|),0),[oemit(%#,{%r[prompt(Training)] Having pushed [obj(%#)]self to the limit%, %N finishes their training regiment.})] [pemit(%#,%r[prompt(Training)] You have earned a total of [min(%q2,5000)] Experience from your training session!)])];@if lte(extract(get(%#/Dat`Training%0),6,1,|),0)={@set %#=Dat`XP:[add(get(%#/Dat`XP),[min(%q2,5000)])]; @cemit Monitor-XP=[prompt(Training)] %N has received [min(%q2,5000)] XP from training.; @set %#=dat`xp-trained:[add([min(5000,%q2)], [get(%#/dat`XP-Trained)])]; @set %#=Dat`Training%0: }

&CMD`TRAININGPROGRESS #2082=$+Train/* Progress:@assert match([extract(get(%#/Dat`Training[switch(1,hasattr(%#/Dat`TrainingStat),Stat,hasattr(%#/Dat`TrainingJutsu),Jutsu,hasattr(%#/Dat`TrainingSkill),Skill)]),1,1,|)],%0,|)={@pemit %#=[prompt(Training)] %0 is not a valid option. Please do [ansi(hg,+train)]/[ansi(hr,<Category>)] Progress where [ansi(hr,<Category>)] is one of [ansi(y,Jutsu)], [ansi(y,Stat)], or [ansi(y,Skill)] };@assert hasattr(%#/Dat`Training%0)={@pemit %#=[prompt(Training)] You must begin a training session first.}; @eval [setq(0,ceil(rand(mul([extract(get(%#/Dat`Training%0),3,1,|)],.25),mul([extract(get(%#/Dat`Training%0),3,1,|)],1.25))))][setq(1,max(rand([div(%q0,5)],[div(%q0,2)]),5))][setq(3, extract(get(%#/Dat`Training%0),5,1,|))]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),5,[if(gte(extract(get(%#/Dat`Training%0),4,1,|),100),[ceil(add(extract(get(%#/Dat`Training%0),5,1,|),mul(add(%q0,[if(eq(extract(get(%#/Dat`Training%0),7,1,|),1),[rand(10,[add(11,%q0)])],0)]),2)))],[add(extract(get(%#/Dat`Training%0),5,1,|),%q0,[if(eq(extract(get(%#/Dat`Training%0),7,1,|),1),[rand(10,[add(11,%q0)])],0)])])],|)]; @eval [setq(2,[ceil(mul([extract(get(%#/Dat`Training%0),5,1,|)],add(1,fdiv(u(#2082/func`shinobirankcalc),50))))])]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),6,[max(sub(extract(get(%#/Dat`Training%0),6,1,|),%q1),0)],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),7,[if(gte(add(rand(100),u(#2082/func`shinobirankcalc)),100),1,0)],|)]; @pemit %#=[Prompt(Training)] Your Progress has been raised to [extract(get(%#/Dat`Training%0),5,1,|)] ([ansi(hg, +[sub([extract(get(%#/dat`Training%0), 5, 1, |)], %q3)])]) and [u(fn`endureDisplay, [extract(get(%#/Dat`Training%0),6,1,|)])] ([ansi(hr, -%q1)]) Endurance remains. [if(eq(extract(get(%#/Dat`Training%0),7,1,|),1), Your effort pays off with a burst of Inspiration!)]; @eval [if(lte(extract(get(%#/Dat`Training%0),6,1,|),0),[oemit(%#,{%r[prompt(Training)] Having pushed themself to the limit%, %N finishes their training regiment.})] [pemit(%#,%r[prompt(Training)] You have earned a total of [min(%q2,5000)] Experience from your training session!)],)];@if lte(extract(get(%#/Dat`Training%0),6,1,|),0)={@set %#=Dat`XP:[add(get(%#/Dat`XP),[min(%q2,5000)])]; @cemit Monitor-XP=[prompt(Training)] %N has received [min(%q2,5000)] XP from training.; @set %#=dat`xp-trained:[add([min(5000,%q2)], [get(%#/dat`XP-Trained)])]; @set %#=Dat`Training%0: }

tier
&CMD`TRAININGREST #2082=$+Train/* Rest:@assert match([extract(get(%#/Dat`Training[switch(1,hasattr(%#/Dat`TrainingStat),Stat,hasattr(%#/Dat`TrainingJutsu),Jutsu,hasattr(%#/Dat`TrainingSkill),Skill)]),1,1,|)],%0,|)={@pemit %#=[prompt(Training)] %0 is not a valid option. Please do [ansi(hg,+train)]/[ansi(hr,<Category>)] Progress where [ansi(hr,<Category>)] is one of [ansi(y,Jutsu)], [ansi(y,Stat)], or [ansi(y,Skill)] };@assert hasattr(%#/Dat`Training%0)={@pemit %#=[prompt(Training)] You must begin a training session first.};@break gte([extract(get(%#/Dat`Training%0),6,1,|)],[u(#2082/Func`EndCalc)])={@pemit %#=[prompt(Training)] You already have full Endurance.};@break and(lte([extract(get(%#/Dat`Training%0),4,1,|)],0),lte([extract(get(%#/Dat`Training%0),5,1,|)],0))={@pemit %#=[prompt(Training)] You have lost all of the Quality and Progress of your current training and thus find it difficult to rest.};@eval [setq(1,rand(5,[add(20,[u(#2082/Func`RestCalc)])]))][setq(0,min(%q1,25))] ;@set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),6,[min(add(extract(get(%#/Dat`Training%0),6,1,|),%q1,[if(eq(extract(get(%#/Dat`Training%0),7,1,|),1),15,0)]),[u(#2082/Func`EndCalc)])],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),4,[max(sub(extract(get(%#/Dat`Training%0),4,1,|),%q0),0)],|)]; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),5,[max(sub(extract(get(%#/Dat`Training%0),5,1,|),%q0),0)],|)]; @pemit %#=[prompt(Training)] You recover to [u(fn`enduredisplay, [extract([get(%#/dat`training%0)], 6, 1, |)])] ([ansi(hg, +[add(%q1,[if(extract(get(%#/Dat`Training%0),7,1,|),15)])])]) Endurance from resting. You lose [ansi(hr, -%q0)] Progress ([extract([get(%#/dat`training%0)], 5, 1, |)]) and Quality ([ansi([if([gte([extract([get(%#/dat`training%0)], 4, 1, |)], 100)], hg, hr)], [extract([get(%#/dat`training%0)], 4, 1, |)])]) of training.; @set %#=Dat`Training%0:[replace(get(%#/Dat`Training%0),7,0,|)]

Type|Ability|Proficiency|Quality|Progress|Endurance|Inspiration

&Func`EndCalc #2082=[add([if(match(get(%#/Dat`Merits),Vigorous,|),15)],[if(match(get(%#/Dat`Merits),High Chakra,|),15)],[if(match(get(%#/Dat`Flaws),Enervated,|),-15)],[if(match(get(%#/Dat`Flaws),Low Chakra,|),-15)],100)]

&Func`RestCalc #2082=[add([if(match(get(%#/Dat`Merits),Quick Recovery,|),5)],[if(match(get(%#/Dat`Merits),Rapid Recovery,|),5)],[if(match(get(%#/Dat`Merits),Perfected Chakra Molding,|),5)],[if(match(get(%#/Dat`Flaws),Slow Recovery,|),-5)],[if(match(get(%#/Dat`Flaws),Erratic Chakra,|),-5)])]

shinobirankcalc

&CMD`TRAININGVIEW #2082=$+Train/* view:@assert match([extract(get(%#/Dat`Training[switch(1,hasattr(%#/Dat`TrainingStat),Stat,hasattr(%#/Dat`TrainingJutsu),Jutsu,hasattr(%#/Dat`TrainingSkill),Skill)]),1,1,|)],%0,|)={@pemit %#=[prompt(Training)] %0 is not a valid option. Please do [ansi(hg,+train)]/[ansi(hr,<Category>)] Progress where [ansi(hr,<Category>)] is one of [ansi(y,Jutsu)], [ansi(y,Stat)], or [ansi(y,Skill)] };@pemit %#=[printf($35^:[ansi(hb, -=)]:s, %[ Training Status %])]%r[printf($1:[ansi(hb, |)]:&s $-20&s $10&s $1:[ansi(hb, |)]:&s, %r%r%r%r%r, [ansi(hw, Type:%rAbility:%rProficiency:%rProgress:%rQuality:%rEndurance:)], [extract(get(%#/Dat`Training%0),1,1,|)]%r[extract(get(%#/Dat`Training%0),2,1,|)]%r[extract(get(%#/Dat`Training%0),3,1,|)]%r[extract(get(%#/Dat`Training%0),5,1,|)]%r[ansi([if([gte([extract(get(%#/Dat`Training%0),4,1,|)], 100)], hg, hr)], [extract(get(%#/Dat`Training%0),4,1,|)])]%r[u(#2082/fn`endureDisplay, [extract(get(%#/Dat`Training%0),6,1,|)])], %r%r%r%r%r)]%r[printf($35^:[ansi(hb, -=)]:s, %[ End %])]


&FUNC`REFRESH #245=[set(%#,Dat`Vitality`Total:[u(#245/func`vitalitycalc)])][set(%#,Dat`Vitality`Max:[u(#245/func`vitalitycalc)])][set(%#,Dat`PhysicalEnergy`Total:[u(#245/func`physicalenergycalc)])][set(%#,Dat`PhysicalEnergy`Max:[u(#245/func`physicalenergycalc)])][set(%#,Dat`PhysicalEnergy`Current:[u(#245/func`physicalenergycalc)])][set(%#,Dat`SpiritualEnergy`Total:[u(#245/func`Spiritualenergycalc)])] [set(%#,Dat`SpiritualEnergy`Max:[u(#245/func`Spiritualenergycalc)])][set(%#,Dat`SpiritualEnergy`Current:[u(#245/func`Spiritualenergycalc)])][set(%#,Dat`Stamina`Total:[u(#245/func`StaminaTotalcalc)])][set(%#,Dat`Stamina`Max:[u(#245/func`StaminaTotalcalc)])][set(%#,Dat`Chakra`Total:[u(#245/func`chakraTotalcalc)])][set(%#,Dat`Chakra`Max:[u(#245/func`chakraTotalcalc)])]

________________________________________________________________________________________


New Training System

* Based on each category of training and the individual things being trained.
* No longer earns XP, but instead progress towards increasing what is being trained.
* XP and KP can still be utilized with normal purchasing methods.
* Dynamic amounts of training based on the current overall progress in what is being trained, the amount of similar things within the category, complexity, Usage/Proficienation for Jutsu (maybe in the future)?


Categories: Stats, Jutsu, RP Skills
Sub Categories: Specified Stat, Specified Jutsu, Specified RP Skill

Inspiration: static 3x multiplier, random chance of occuring. 
&FUNC`StamCALC #2082=[add([if(match(get(%#/Dat`Merits),Vigorous,|),-.015)],[if(match(get(%#/Dat`Merits),High Chakra,|),-.015)],[if(match(get(%#/Dat`Flaws),Enervated,|),.015)],[if(match(get(%#/Dat`Flaws),Low Chakra,|),.015)])]
&FUNC`QualityCALC #2082=[add([if(match(get(%#/Dat`Merits),Gifted,|),-3)],[if(match(get(%#/Dat`Merits),Perfected Chakra Molding,|),-3)],[if(match(get(%#/Dat`Flaws),Inept,|),3)],[if(match(get(%#/Dat`Flaws),Erratic Chakra,|),3)])]



Training Gains (Progress) Algorithm: [ceil(mul(rand(mul([u(#2082/func`shinobirankcalc)],.5),mul([u(#2082/func`shinobirankcalc)],1.25)),mul([extract(get(%#/Dat`Train%0),4,1,|)],[if(eq(extract(get(%#/Dat`Train%0),7,1,|),1),3,1)])))]  | (10*.5) * (1+0) = 4 Projected Min or (80*1.25)*(3+3) = 600 Projeted Max
Training Preparation (Quality) Algorithm: [min(round(add(1,fdiv([extract(get(%#/Dat`Train%0),4,1,|)],add(10,[u(#2082/Func`QualityCalc)]))),1),10)]
Training Perserverence (Endurance) Algorithm: [ceil(mul(mul(get(%#/Dat`Stamina`Max),add(.05,[u(#2082/Func`StamCalc)])),add(1,[if(match(get(%#/Dat`Merits),Rapid Recovery,|),-.25)],[if(match(get(%#/Dat`Merits),Tough,|),-.25)],[if(match(get(%#/Dat`Merits),Quick Recovery,|),-.25)],[if(match(get(%#/Dat`Flaws),Frail,|),.25)],[if(match(get(%#/Dat`Flaws),Slow Recovery,|),.25)])))]

Stat Algorithm:  
&func`StatAlg #2082=[ceil(mul(add([extract(get(%#/Dat`PrimaryStats),[match(get(#244/Dat`PrimaryStats),%0,|)],1,|)],[get(%#/Dat`Tier)],3),add(500,[if(or(match(get(%#/Dat`Merits),Greater %0*,|),match(get(%#/Dat`Merits),Genius,|)),-250,0)],[if(or(match(get(%#/Dat`Flaws),Inferior %0*,|),match(get(%#/Dat`Flaws),Impaired,|)),250,0)])))] 
= 1000 Min, 15000 Max

Jutsu Algorithm: 
&func`jutsualg #2082=[ceil(mul(add([extract(get(%#/Dat`JutsuAttributes`[edit(%0,%b,-)]),14,1,|)],[ceil(fdiv([u(#2082/func`shinobirankcalc)],10))],5, [words([sqlite_query(Game, Select Special Actions From Templates where ID=[extract(get(%#/Dat`JutsuAttributes`[edit(%0,%b,-)]),7,1,|)])],~)]),add(500,[switch(1,[and([match(get(%#/Dat`AffinityList),[sqlite_query(Game, Select Type From Templates where ID=[extract(get(%#/Dat`JutsuAttributes`[edit(%0,%b,-)]),7,1,|)])],|)],[match(Ninjutsu|Nintaijutsu|Chakra Flow Taijutsu|Chakra Flow Bukijutsu,[sqlite_query(Game, Select Archetype From Templates where ID=[extract(get(%#/Dat`JutsuAttributes`[edit(%0,%b,-)]),7,1,|)])],|)],|)],-250,[and([match(get(%0/Dat`AffinityList),Yang,|)],[match(Taijutsu|Bukijutsu,[sqlite_query(Game, Select Archetype From Templates where ID=[extract(get(%#/Dat`JutsuAttributes`[edit(%0,%b,-)]),7,1,|)])],|)])],-250,[and([match(get(%0/Dat`AffinityList),Yin,|)],[match(Seals|Calligraphy,[sqlite_query(Game, Select Archetype From Templates where ID=[extract(get(%#/Dat`JutsuAttributes`[edit(%0,%b,-)]),7,1,|)])],|)])],-250,0)])))] 
= 1500 Min, 10000 Max



RP Skill Algorithm:  
&func`skillalg #2082=[ceil(mul(add([extract(get(%#/dat`RPSkills),[match(get(#244/Dat`RPSkills),%0,|)],1,|)],[ceil(fdiv([u(#2082/func`shinobirankcalc)],10))],3),add(500,[if(match(get(%#/Dat`Merits),Genius,|),-250,add([if(match(get(%#/Dat`Merits),Talented,|),-150,0)], [if(match(get(%#/Dat`Merits),Prodigy,|),-100,0)]))],[if(match(get(%#/Dat`Flaws),Impaired,|),250,add([if(match(get(%#/Dat`Flaws),Untalented,|),150,0)], [if(match(get(%#/Dat`Flaws),Late Bloomer,|),100,0)]))])))] 
= 1000 Min, 15000 Max


&Cmd`NTraining #2082=$+NewTrain *=*:@assert match(Stat|Jutsu|Skill,%0,|)={@pemit %#=[prompt(Training)] %0 is not something that you can train. Try Stat, Jutsu, or Skill instead.};@assert !hasattr(%#/Dat`Train%0)={@pemit %#=[prompt(Training)] You must complete your current [extract(get(%#/Dat`Train[caplist(%0,,,L)]),1,1,|)] training first.};@assert or([and(match(Stat,%0),match(Taijutsu|Ninjutsu|Genjutsu|Power|Speed|Stamina|Intelligence|Hand Seals,%1*,|))],[and(match(Jutsu,%0),hasattr(%#/Dat`JutsuAttributes`[edit(%1,%b,-)]))],[and(match(Skill,%0),match([iter(u(#244/dat`rpskills), if(elements(u(%#/dat`rpskills), #@,|), ##|),|,)],%1,|))])={@pemit %#=[prompt(Training)] The type of training you are performing and the specific task you are attempting to train are incompatible.};@assert or([if(match(Stat,%0),[lt([elements([get(%#/dat`PrimaryStats)], [match(get(#244/Dat`PrimaryStats),%1,|)], |)], [add(9, -[t(or([match([get(%#/dat`Flaws)], Inferior %1, |)],[match([get(%#/dat`Flaws)], Impaired, |)]))], [or([match([get(%#/dat`Merits)], Greater %1, |)], [match([get(%#/dat`Merits)], Genius, |)])])])])],[if(match(Jutsu,%0),lt(extract(get(%#/Dat`JutsuAttributes`[edit(%1,%b,-)]),14,1,|),6))],[if(match(Skill,%0),lt([extract(get(%#/dat`RPSkills),[match(get(#244/Dat`RPSkills),%1,|)],1,|)],10))])={@pemit %#=[prompt(Training)] You are unable to train your [caplist(%1,,,L)] any further.};@set %#=Dat`Train%0:[grab(Stat|Jutsu|Skill,%0,|)]|[caplist(%1,,,L)]|0|[min(round(add(1,fdiv([extract(get(%#/Dat`Train%0),3,1,|)],add(10,[u(#2082/Func`QualityCalc)]))),1),10)]|0|0|0|[u(#2082/Func`%0ALG,%1)];@pemit %#=[prompt(Training)] You have begun to train a [caplist(%0,,,L)] with the [caplist(%1,,,L)] ability at a Difficulty of [extract(get(%#/Dat`Train%0),8,1,|)].; @oemit %#=[prompt(Training)] %N has begun to train [poss(%#)] [caplist(%1,,,L)] ability.


Type|Ability|Prepared|Quality|Progress|Preserverence|Inspiration|Difficulty


&CMD`TRAINQUALITY #2082=$+NewTrain/* Quality:@eval [setq(0,[ceil(mul(mul(get(%#/Dat`Stamina`Max),add(.05,[u(#2082/Func`StamCalc)])),add(1,[if(match(get(%#/Dat`Merits),Rapid Recovery,|),-.25)],[if(match(get(%#/Dat`Merits),Tough,|),-.25)],[if(match(get(%#/Dat`Merits),Quick Recovery,|),-.25)],[if(match(get(%#/Dat`Flaws),Frail,|),.25)],[if(match(get(%#/Dat`Flaws),Slow Recovery,|),.25)])))])];@assert match([extract(get(%#/Dat`Train[switch(1,hasattr(%#/Dat`TrainStat),Stat,hasattr(%#/Dat`TrainJutsu),Jutsu,hasattr(%#/Dat`TrainSkill),Skill)]),1,1,|)],%0,|)={@pemit %#=[prompt(Training)] %0 is not a valid option. Please do [ansi(hg,+train)]/[ansi(hr,<Category>)] Progress where [ansi(hr,<Category>)] is one of [ansi(y,Jutsu)], [ansi(y,Stat)], or [ansi(y,Skill)] };@assert hasattr(%#/Dat`Train%0)={@pemit %#=[prompt(Training)] You must begin a [caplist(%0,,,L)] training session first.}; @assert gt(get(%#/Dat`Stamina`Current),%q0)={@pemit %#=[prompt(Training)] You do not have enough Stamina to continue raising the quality of your [caplist(%0,,,L)] training.};@assert lt([extract(get(%#/Dat`Train%0),4,1,|)],10)={@pemit %#=[prompt(Training)] Your preparations for training [ansi(hc,caplist(extract(get(%#/Dat`Train%0),2,1,|),,,L))] are already complete and of the highest Quality.};@set %#=Dat`Train%0:[replace(get(%#/Dat`Train%0),3,[add(extract(get(%#/Dat`Train%0),3,1,|),[rand(1,add(5,[if(match(get(%#/Dat`Merits),Gifted,|),3)],[if(match(get(%#/Dat`Flaws),Inept,|),-3)]))],[if(eq(extract(get(%#/Dat`Train%0),7,1,|),1),3,1)])],|)];@set %#=Dat`Train%0:[replace(get(%#/Dat`Train%0),4,[min(round(add(1,fdiv([extract(get(%#/Dat`Train%0),3,1,|)],add(10,[u(#2082/Func`QualityCalc)]))),1),10)],|)];@set %#=Dat`Train%0:[replace(get(%#/Dat`Train%0),7,[if(gte(add(rand(100),u(#2082/func`shinobirankcalc)),100),1,0)],|)];@set %#=Dat`Stamina`Current:[max(0,sub(get(%#/Dat`Stamina`Current),%q0))]; @pemit %#=[Prompt(Training)] Your Quality has been raised to [ansi([switch(1,lte([extract(get(%#/Dat`Train%0),4,1,|)],3.9),hr,lt([extract(get(%#/Dat`Train%0),4,1,|)],7),hy,gte([extract(get(%#/Dat`Train%0),4,1,|)],7),hg)], [extract(get(%#/Dat`Train%0),4,1,|)])](Preparedness [extract(get(%#/Dat`Train%0),3,1,|)]) and [add(extract(get(%#/Dat`Train%0),6,1,|),%q0)] ([ansi(hr, +%q0)]) total Stamina has been expended. [if(eq(extract(get(%#/Dat`Train%0),7,1,|),1), Your effort pays off with a burst of Inspiration!)];@eval [u(#253/Func`Status)];@if gte([extract(get(%#/Dat`Train%0),4,1,|)],10)={@oemit %#=[prompt(Training)] %N has completed their preparations for training [poss(%#)] [caplist(extract(get(%#/Dat`Train%0),2,1,|),,,L)] ability.};@set %#=Dat`Train%0:[replace(get(%#/Dat`Train%0),6,[add(extract(get(%#/Dat`Train%0),6,1,|),%q0)],|)]


&CMD`TRAINPROGRESS #2082=$+NewTrain/* Progress:@eval [setq(0,[ceil(mul(mul(mul(get(%#/Dat`Stamina`Max),add(.05,[u(#2082/Func`StamCalc)])),add(1,[if(match(get(%#/Dat`Merits),Rapid Recovery,|),-.25)],[if(match(get(%#/Dat`Merits),Tough,|),-.25)],[if(match(get(%#/Dat`Merits),Quick Recovery,|),-.25)],[if(match(get(%#/Dat`Flaws),Frail,|),.25)],[if(match(get(%#/Dat`Flaws),Slow Recovery,|),.25)])),min(1,fdiv([extract(get(%#/Dat`Train%0),4,1,|)],4))))])];@assert match(Stat|Jutsu|Skill,%0,|)={@pemit %#=[prompt(Training)] %0 is not a valid option. Please do [ansi(hg,+train)]/[ansi(hr,<Category>)] Progress where [ansi(hr,<Category>)] is one of [ansi(y,Jutsu)], [ansi(y,Stat)], or [ansi(y,Skill)] };@assert hasattr(%#/Dat`Train%0)={@pemit %#=[prompt(Training)] You must begin a training session first.}; @assert gt(get(%#/Dat`Stamina`Current),%q0)={@pemit %#=[prompt(Training)] You do not have enough Stamina to continue progressing with your [caplist(%0,,,L)] training.}; @eval [setq(1,[ceil(mul(rand(mul([u(#2082/func`shinobirankcalc)],.5),mul([u(#2082/func`shinobirankcalc)],1.25)),mul([extract(get(%#/Dat`Train%0),4,1,|)],[if(eq(extract(get(%#/Dat`Train%0),7,1,|),1),3,1)])))])][setq(3, add([extract(get(%#/Dat`Train%0),5,1,|)],[switch()]))];@set %#=Dat`Train%0:[replace(get(%#/Dat`Train%0),8,[u(#2082/Func`%0ALG,[extract(get(%#/Dat`Train%0),2,1,|)])],|)]; @set %#=Dat`Train%0:[replace(get(%#/Dat`Train%0),5,[add(extract(get(%#/Dat`Train%0),5,1,|),%q1)],|)];@set %#=Dat`Train%0:[replace(get(%#/Dat`Train%0),7,[if(gte(add(rand(100),mul([u(#2082/func`shinobirankcalc)],fdiv([extract(get(%#/Dat`Train%0),4,1,|)],10))),100),1,0)],|)];@set %#=Dat`Stamina`Current:[max(0,sub(get(%#/Dat`Stamina`Current),%q0))];@pemit %#=[Prompt(Training)] Your Progress has been raised to [extract(get(%#/Dat`Train%0),5,1,|)]/[extract(get(%#/Dat`Train%0),8,1,|)] ([ansi(hg, +%q1)]) and [add(extract(get(%#/Dat`Train%0),6,1,|),%q0)] ([ansi(hr, +%q0)]) total Stamina has been expended. [if(eq(extract(get(%#/Dat`Train%0),7,1,|),1), Your effort pays off with a burst of Inspiration!)]; @eval [u(#253/Func`Status)];@set %#=Dat`Train%0:[replace(get(%#/Dat`Train%0),6,[max(add(extract(get(%#/Dat`Train%0),6,1,|),%q0),0)],|)]; @eval [if(gte(extract(get(%#/Dat`Train%0),5,1,|),extract(get(%#/Dat`Train%0),8,1,|)),[oemit(%#,{%r[prompt(Training)] Having pushed [obj(%#)]self to the limit%, %N finishes their training regiment.})] [pemit(%#,%r[prompt(Training)] You have increased your [extract(get(%#/Dat`Train%0),2,1,|)] [caplist(%0,,,L)] with this training session!)],)];@if gte(extract(get(%#/Dat`Train%0),5,1,|),extract(get(%#/Dat`Train%0),8,1,|))={@eval [switch(%0,Stat,[set(%#,Dat`PrimaryStats:[replace([get(%#/dat`PrimaryStats)], [match(get(#244/Dat`PrimaryStats),[extract(get(%#/Dat`Train%0),2,1,|)],|)], [inc([elements([get(%#/dat`PrimaryStats)], [match(get(#244/Dat`PrimaryStats),[extract(get(%#/Dat`Train%0),2,1,|)],|)], |)])], |)])],Jutsu,[set(%#,Dat`JutsuAttributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]:[replace(get(%#/dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),14,[add([extract(get(%#/Dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),14,1,|)],1)],|)])][set(%#,Dat`JutsuAttributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]:[replace(get(%#/dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),15,[add([extract(get(%#/Dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),15,1,|)],[switch([extract(get(%#/dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),14,1,|)],2,4,3,4,4,5,5,5,6,6)])],|)])],Skill,[set(%#,Dat`RPSkills:[replace(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),[grab(get(#244/Dat`RPSkills),[extract(get(%#/Dat`Train%0),2,1,|)],|)],|)],[add([extract(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),[extract(get(%#/Dat`Train%0),2,1,|)],|)],1,|)],1)],|)])])]; @eval [set(%#,Dat`PhysicalEnergy`Total:[u(#245/func`physicalenergycalc)])] [set(%#,Dat`Physicalenergy`Max:[get(%#/Dat`PhysicalEnergy`Total)])] [set(%#,Dat`PhysicalEnergy`Current:[get(%#/Dat`PhysicalEnergy`Max)])] [set(%#,Dat`SpiritualEnergy`Total:[u(#245/func`Spiritualenergycalc)])] [set(%#,Dat`Spiritualenergy`Max:[get(%#/Dat`SpiritualEnergy`Total)])] [set(%#,Dat`SpiritualEnergy`Current:[get(%#/Dat`SpiritualEnergy`Max)])] [set(%#,Dat`Stamina`Total:[u(#245/func`Staminacalc)])] [set(%#,Dat`Stamina`Max:[get(%#/Dat`Stamina`Total)])] [set(%#,Dat`Chakra`Total:[u(#245/func`chakracalc)])][set(%#,Dat`Chakra`Max:[get(%#/Dat`Chakra`Total)])][set(%#,Dat`Vitality`Total:[u(#245/func`vitalitycalc)])] [set(%#,Dat`Vitality`Max:[get(%#/Dat`Vitality`Total)])][set(%#, dat`AP`max:[if(and([match(get(%#/Dat`Clan),Reizei,|)],[match(get(%#/Dat`ExpertiseList),Alacrity*,|)]),[min(add(add([after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Alacrity*,|)],1,|),^,1)],1),6),9)],6)])][set(%#,Dat`Stealth`Bonus:[add([switch(after(grab(get(%#/dat`expertiseList), Covert Tactics*, |), ^),0,10,1,20,2,35,10)],[extract(get(%#/TransformAttribs),7,1,|)])])][set(%#,Dat`Stealth:[u(#245/Func`StealthCalcReset,%#)])][set(%#,Dat`Perception`Bonus:[add([switch(after(grab(get(%#/dat`expertiseList), Observation Methods*, |), ^),0,10,1,20,2,35,10)],[extract(get(%#/TransformAttribs),8,1,|)])])][set(%#,Dat`Perception:[u(#245/Func`PerceptionCalcReset,%#)])][set(%#,Dat`MentalCheck`Bonus:[add([switch(after(grab(get(%#/dat`expertiseList), Illusionary Tactics*, |), ^),0,10,1,20,2,35,10)],[extract(get(%#/TransformAttribs),9,1,|)])])][set(%#,Dat`MentalCheck:[u(#245/Func`MentalCheckCalcReset,%#)])] ;@cemit Monitor-XP=[prompt(Training)] %N has compelted training their [caplist([extract(get(%#/Dat`Train%0),2,1,|)],,,L)] with New Training.; @set %#=Dat`Train%0: }

@eval [switch(%0,Stat,[set(%#,Dat`PrimaryStats:[replace([get(%#/dat`PrimaryStats)], [match(get(#244/Dat`PrimaryStats),[extract(get(%#/Dat`Train%0),2,1,|)],|)], [inc([elements([get(%#/dat`PrimaryStats)], [match(get(#244/Dat`PrimaryStats),[extract(get(%#/Dat`Train%0),2,1,|)],|)], |)])], |)])],Jutsu,[set(%#,Dat`JutsuAttributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]:[replace(get(%#/dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),14,[add([extract(get(%#/Dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),14,1,|)],1)],|)])][set(%#,Dat`JutsuAttributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]:[replace(get(%#/dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),15,[add([extract(get(%#/Dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),15,1,|)],[switch([extract(get(%#/dat`jutsuattributes`[edit([extract(get(%#/Dat`Train%0),2,1,|)],%b,-)]),14,1,|)],2,4,3,4,4,5,5,5,6,6)])],|)])],Skill,[set(%#,Dat`RPSkills:[replace(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),[grab(get(#244/Dat`RPSkills),[extract(get(%#/Dat`Train%0),2,1,|)],|)],|)],[add([extract(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),[extract(get(%#/Dat`Train%0),2,1,|)],|)],1,|)],1)],|)])])];


&CMD`TRAINVIEW #2082=$+NewTrain/* View:@assert match(Stat|Jutsu|Skill,%0,|)={@pemit %#=[prompt(Training)] %0 is not a valid option. Please do [ansi(hg,+train)]/[ansi(hr,<Category>)] Progress where [ansi(hr,<Category>)] is one of [ansi(y,Jutsu)], [ansi(y,Stat)], or [ansi(y,Skill)] };@assert hasattr(%#/Dat`Train%0)={@pemit %#=[prompt(Training)] You have not yet begun to train a [caplist(%0,,,L)].};@pemit %#=[printf($35^:[ansi(hb, -=)]:s, %[ Training Status %])]%r[printf($1:[ansi(hb, |)]:&s $-20&s $10&s $1:[ansi(hb, |)]:&s, %r%r%r%r%r, [ansi(hw, Type:%rAbility:%rPreparedness:%rQuality:%rProgress:%rPerserverence:%rInspired:%rDifficulty)], [extract(get(%#/Dat`Train%0),1,1,|)]%r[extract(get(%#/Dat`Train%0),2,1,|)]%r[extract(get(%#/Dat`Train%0),3,1,|)]%r[ansi([switch(1,lte([extract(get(%#/Dat`Train%0),4,1,|)],3.9),hr,lt([extract(get(%#/Dat`Train%0),4,1,|)],7),hy,gte([extract(get(%#/Dat`Train%0),4,1,|)],7),hg)], [extract(get(%#/Dat`Train%0),4,1,|)])]%r[extract(get(%#/Dat`Train%0),5,1,|)]%r [extract(get(%#/Dat`Train%0),6,1,|)]%r[ansi([if([eq([extract(get(%#/Dat`Train%0),7,1,|)], 1)], hg, hr)], [if([eq([extract(get(%#/Dat`Train%0),7,1,|)], 1)], Yes, No)])]%r[extract(get(%#/Dat`Train%0),8,1,|)], %r%r%r%r%r)]%r[printf($35^:[ansi(hb, -=)]:s, %[ End %])]



Type|Ability|Prepared|Quality|Progress|Preserverence|Inspiration|Difficulty


[set(%#,Dat`PrimaryStats:[replace([get(%#/dat`PrimaryStats)], [match(get(#244/Dat`PrimaryStats),%1,|)], [inc([elements([get(%#/dat`PrimaryStats)], [match(get(#244/Dat`PrimaryStats),%1,|)], |)])], |)])]

 [set(%#,Dat`JutsuAttributes`[edit(%1,%b,-)]:[replace(get(%#/dat`jutsuattributes`[edit(%1,%b,-)]),14,[add([extract(get(%#/Dat`jutsuattributes`[edit(%1,%b,-)]),14,1,|)],1)],|)])]

 [set(%#,Dat`JutsuAttributes`[edit(%1,%b,-)]:[replace(get(%#/dat`jutsuattributes`[edit(%1,%b,-)]),15,[add([extract(get(%#/Dat`jutsuattributes`[edit(%1,%b,-)]),15,1,|)],[switch([extract(get(%#/dat`jutsuattributes`[edit(%1,%b,-)]),14,1,|)],2,4,3,4,4,5,5,5,6,6)])],|)])]
 
 [set(%#,Dat`RPSkills:[replace(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),[grab(get(#244/Dat`RPSkills),%1,|)],|)],[add([extract(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),%1,|)],1,|)],1)],|)])]


&CMD`STATBUY #1215=$+buy/stat *:@assert [hasattr(%#/dat`Approval)]={@pemit %#=[prompt(Game)] Please complete CG before buying stats.}; @break [member([get(%l/list`players)],%#)]={@pemit %#=%r%r[prompt(App)] You cannot purchase things while in Order.%r};@assert [setr(0, [match(get(#244/Dat`PrimaryStats),%0,|)])]={@pemit %#=[Prompt(App)] [caplist(%0)] is not a Primary Stat.};@assert [lt([elements([get(%#/dat`PrimaryStats)], %q0, |)], [add(9, -[t(or([match([get(%#/dat`Flaws)], Inferior %0, |)],[match([get(%#/dat`Flaws)], Impaired %0, |)]))], [or([match([get(%#/dat`Merits)], Greater %0, |)], [match([get(%#/dat`Merits)], Genius, |)])])])]={@pemit %#=[Prompt(App)] [capstr([lcstr(%0)])] cannot be raised further.}; @assert [gte([get(%#/dat`KP)], [max(sub(3,[after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],1,|),^,1)]),1)])]={@pemit %#=[prompt(app)] You require at least 3 Knowledge Points to raise a stat.}; @assert gte(get(%#/Dat`XP), [setr(1, [switch(get(%#/Dat`Tier),0,250,1,500,2,750,3,1000,4,1500,5,2000,6,2500,7,3500,8,5000)])])={@pemit %#=[Prompt(App)] You need %q1 XP to raise a stat.}; @set %#=Dat`PrimaryStats:[replace([get(%#/dat`PrimaryStats)], %q0, [inc([elements([get(%#/dat`PrimaryStats)], %q0, |)])], |)]; @set %#=Dat`KP:[sub([get(%#/dat`KP)], [max(sub(3,[after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],1,|),^,1)]),1)])]; @set %#=Dat`XP:[sub([get(%#/dat`XP)], %q1)]; @pemit %#={[prompt(app)] [elements([get(#244/dat`PrimaryStats)], %q0, |)] has been raised to [elements([get(%#/dat`PrimaryStats)], %q0, |)] for %q1 XP and [max(sub(3,[after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],1,|),^,1)]),1)] KP[if([match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],%b%(Elite Tradition%),)]. You have [get(%#/dat`XP)] XP and [get(%#/dat`KP)] KP remaining.}; @skip/ifelse [match(17 25 33 41 49 57 65 73, [ladd([get(%#/dat`PrimaryStats)], |)])]={@set %#=dat`Tier:[inc([get(%#/dat`Tier)])]; @pemit %#={[prompt(Game)] Your tier has increased to Tier [get(%#/dat`Tier)].}; {@eval [switch(1, [lte(1, [get(%#/dat`Tier)], 2)], [setq(2, 3)][setq(3, 3)], [lte(3, [get(%#/dat`Tier)], 4)], [setq(2, 2)][setq(3, 2)], [lte(5, [get(%#/dat`tier)], 6)], [setq(2, 1)][setq(3, 1)], [gte(7, [get(%#/dat`tier)])], [setq(2, 0)][setq(3, 0)])]}; @wait 0={@set %#=dat`SpecialtySlots:[add([get(%#/dat`SpecialtySlots)], %q2)]; @set %#=Dat`ExpertiseSlots:[add([get(%#/dat`ExpertiseSlots)], %q3)]; @pemit %#=[prompt(Game)] You have gained %q2 Specialty Slots and %q3 Expertise Slots.}}; @eval [u(#245/func`Refresh)]; @cemit Monitor-App= [ansi(hm, %N)] %(%#%) has increased their [capstr([lcstr(%0)])] Stat.


&CMD`PROFICIENCYAPP App System=$+buy/proficiency *:@break [member([get(%l/list`players)],%#)]={@pemit %#=%r%r[prompt(Game)] You cannot purchase things while in Order.%r};@break hasattr(%#/Dat`JutsuAttributes`[edit(%0,%b,-)])={@break gte(get(%#/Dat`KP),[max(sub(3,[after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],1,|),^,1)]),1)])={@break gte(get(%#/Dat`XP),[switch([extract(get(%#/dat`jutsuattributes`[edit(%0,%b,-)]),14,1,|)],1,1000,2,2000,3,3000,4,4000,5,5000)])={@break lt([extract(get(%#/dat`jutsuattributes`[edit(%0,%b,-)]),14,1,|)],6)={ @set %#=Dat`JutsuAttributes`[edit(%0,%b,-)]:[replace(get(%#/dat`jutsuattributes`[edit(%0,%b,-)]),14,[add([extract(get(%#/Dat`jutsuattributes`[edit(%0,%b,-)]),14,1,|)],1)],|)] ;@set %#=Dat`XP:[sub(get(%#/Dat`XP),[switch([extract(get(%#/dat`jutsuattributes`[edit(%0,%b,-)]),14,1,|)],1,0,2,1000,3,2000,4,3000,5,4000,6,5000)])]; @set %#=Dat`KP:[sub(get(%#/Dat`KP),[max(sub(3,[after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],1,|),^,1)]),1)])]; @set %#=Dat`JutsuAttributes`[edit(%0,%b,-)]:[replace(get(%#/dat`jutsuattributes`[edit(%0,%b,-)]),15,[add([extract(get(%#/Dat`jutsuattributes`[edit(%0,%b,-)]),15,1,|)],[switch([extract(get(%#/dat`jutsuattributes`[edit(%0,%b,-)]),14,1,|)],2,4,3,4,4,5,5,5,6,6)])],|)];@pemit %#=[prompt(Game)] %N has increased the Jutsu Proficiency Level of [caplist(%0)] to [extract(get(%#/Dat`jutsuattributes`[edit(%0,%b,-)]),14,1,|)], raising the amount of available Jutsu Mastery Points to [extract(get(%#/Dat`jutsuattributes`[edit(%0,%b,-)]),15,1,|)] for [switch([extract(get(%#/dat`jutsuattributes`[edit(%0,%b,-)]),14,1,|)],1,0,2,1000,3,2000,4,3000,5,4000,6,5000)] XP and [max(sub(3,[after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],1,|),^,1)]),1)] KP[if([match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],%b%(Elite Tradition%),)]. %r%r [get(%#/Dat`XP)] XP, and [get(%#/Dat`KP)] KP remain. ;@cemit monitor-app=[prompt(App)] %N has increased the Proficiency Level of their [caplist(%0,,,L)] jutsu to [extract(get(%#/Dat`jutsuattributes`[edit(%0,%b,-)]),14,1,|)]. };@pemit %#=[prompt(Game)] %N has already achieved the maximum Proficiency Level for the [caplist(%0)] jutsu. };@pemit %#=[prompt(Game)] %N does not have enough XP. };@pemit %#=[prompt(Game)] %N does not have enough KP.}; @pemit %#=[prompt(Game)] %N does not have the [caplist(%0)] Jutsu.


&CMD`RPSKILL App System=$+buy/RPskill *:@break [member([get(%l/list`players)],%#)]={@pemit %#=%r%r[prompt(App)] You cannot purchase things while in Order.%r};@assert gt([extract(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),%0,|)],1,|)],0)={@pemit %#=[prompt(App)] You do not possess the [caplist(%0,,,L)] RP Skill.};@assert lt([extract(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),%0,|)],1,|)],10)={@pemit %#=[prompt(App)] Your [caplist(%0,,,L)] RP Skill is already at the maximum level of 10.};@assert match(get(#244/Dat`RPSkills),%0,|)={@pemit %#=[prompt(App)] [caplist(%0,,,L)] is not an RP Skill.};@assert gte(get(%#/Dat`XP),1000)={@pemit %#=[prompt(App)] You do not have enough XP(1000) to upgrade the [caplist(%0,,,L)] RP Skill.};@assert gte(get(%#/Dat`KP),[max(sub(2,[after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],1,|),^,1)]),1)])={@pemit %#=[prompt(App)] You do not have enough KP([max(sub(2,[after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],1,|),^,1)]),1)]) to upgrade the [caplist(%0,,,L)] RP Skill.};@set %#=Dat`RPSkills:[replace(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),[grab(get(#244/Dat`RPSkills),%0,|)],|)],[add([extract(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),%0,|)],1,|)],1)],|)]; @set %#=Dat`XP:[sub(get(%#/Dat`XP),1000)]; @set %#=Dat`KP:[sub(get(%#/Dat`KP),[max(sub(2,[after(extract(get(%#/Dat`ExpertiseList),[match(get(%#/Dat`ExpertiseList),Elite Tradition*,|)],1,|),^,1)]),1)])]; @pemit %#=[prompt(App)] You have successfully increased your [caplist(%0,,,L)] RP Skill to [extract(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),%0,|)],1,|)]! You have [get(%#/Dat`XP)] XP and [get(%#/Dat`KP)] KP remaining.; @cemit monitor-app=[prompt(App)] %N has increased their [caplist(%0,,,L)] RP Skill to [extract(get(%#/Dat`RPSKills),[match(get(#244/Dat`RPSKILLs),%0,|)],1,|)].
setr